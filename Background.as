package {	//imports	import flash.events.Event;	import flash.events.MouseEvent;	import flash.events.TimerEvent;	import flash.display.MovieClip;	import flash.display.Sprite;		import fl.transitions.Tween;	import fl.transitions.easing.*;	import fl.transitions.TweenEvent;		import flash.geom.ColorTransform;	import flash.text.TextFormatAlign;	import flash.text.TextField;	import flash.text.TextFormat;		import flash.filters.GlowFilter;			public class Background extends Sprite{				public function Background(){		};				public var BackgroundWidth:int = 672;		public var BackgroundHeight:int = 448;				public var FrameWidth:int = 480;		public var FrameHeight:int = 320;				public var snake:Snake;				public function init(){			//center the position			//apply zoom if needed...			mouseEnabled = false;			mouseChildren = false;			bkg.scaleX = BackgroundWidth/bkg.width;			bkg.scaleY = BackgroundHeight/bkg.height;			snake = Snake.getInstance();			bkg.x = -(BackgroundWidth - FrameWidth) * 0.5;			bkg.y = -(BackgroundHeight - FrameHeight) * 0.5;						Mask.alpha = 0.5;						addChild(comboNumberField);						comboNumberField.x = FrameWidth/2 - comboNumberFieldSizeX;			comboNumberField.y = FrameHeight/2 - comboNumberFieldSizeY;			comboNumberField.width = comboNumberFieldSizeX;			comboNumberField.height = comboNumberFieldSizeY;			comboNumberField.alpha = 0.4;						comboNumberField.scaleX = comboNumberField.scaleY = 2;			comboNumberField.filters = [new GlowFilter(0x555555, 0.8, 6, 6, 8)];					}		public var tweenInProgress:Boolean = false;				public var tweenArray:Array = [];		public var tweenTime:Number = 1.5;				public function update(time:Number){			if (tweenInProgress && tweenArray != null && tweenArray.length != 0){				tweenArray[0].stop();				tweenArray[1].stop();				tweenArray[0].removeEventListener(TweenEvent.MOTION_FINISH, tweenComplete);			}			tweenTime = time;			var targetX:int = -(BackgroundWidth - FrameWidth) * snake.head.x/FrameWidth;			var targetY:int = -(BackgroundHeight - FrameHeight) * snake.head.y/FrameHeight;			var movementTweenX:Tween = new Tween(bkg, "x", None.easeIn, bkg.x, targetX, tweenTime, true);			var movementTweenY:Tween = new Tween(bkg, "y", None.easeIn, bkg.y, targetY, tweenTime, true);			tweenArray = [movementTweenX,movementTweenY];			movementTweenX.addEventListener(TweenEvent.MOTION_FINISH, tweenComplete);			movementTweenX.start();			movementTweenY.start();			tweenInProgress = true;		}				private function tweenComplete(e:TweenEvent){			tweenInProgress = false;		}						public function setColor(_color:Number = 0xFFFFFF){			if (Mask != null){				var color:ColorTransform = Mask.transform.colorTransform;				color.color = _color;				Mask.transform.colorTransform = color;			}		}				private var comboNumberSize:int = 70;		private var comboNumberFieldSizeX:int = 80;		private var comboNumberFieldSizeY:int = 70;						private var comboNumberField:TextField = new TextField();		private var comboNumberTextFormat:TextFormat = new TextFormat("Arial", comboNumberSize, 0xBBBBBB);				public function setComboNumber(number:int){			if (number == 0)				comboNumberField.text = "";			else				comboNumberField.text = number.toString();			comboNumberTextFormat.align = TextFormatAlign.CENTER;			comboNumberField.setTextFormat(comboNumberTextFormat);		}			}}