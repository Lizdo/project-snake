package {	//imports	import flash.events.Event;	import flash.events.MouseEvent;	import flash.events.TimerEvent;	import flash.display.MovieClip;	import flash.display.Sprite;		import fl.transitions.Tween;	import fl.transitions.easing.*;	import fl.transitions.TweenEvent;		import flash.geom.ColorTransform;			public class Background extends Sprite{				public function Background(){		};				public var BackgroundWidth:int = 672;		public var BackgroundHeight:int = 448;				public var FrameWidth:int = 480;		public var FrameHeight:int = 320;				public var snake:Snake;				public function init(){			//center the position			//apply zoom if needed...			scaleX = BackgroundWidth/width;			scaleY = BackgroundHeight/height;			snake = Snake.getInstance();			x = -(BackgroundWidth - FrameWidth) * 0.5;			y = -(BackgroundHeight - FrameHeight) * 0.5;		}		public var tweenInProgress:Boolean = false;				public var tweenArray:Array = [];		public var tweenTime:Number = 1.5;				public function update(time:Number){			if (tweenInProgress && tweenArray != null && tweenArray.length != 0){				tweenArray[0].stop();				tweenArray[1].stop();				tweenArray[0].removeEventListener(TweenEvent.MOTION_FINISH, tweenComplete);			}			tweenTime = time;			var targetX:int = -(BackgroundWidth - FrameWidth) * snake.head.x/FrameWidth;			var targetY:int = -(BackgroundHeight - FrameHeight) * snake.head.y/FrameHeight;			var movementTweenX:Tween = new Tween(this, "x", None.easeIn, this.x, targetX, tweenTime, true);			var movementTweenY:Tween = new Tween(this, "y", None.easeIn, this.y, targetY, tweenTime, true);			tweenArray = [movementTweenX,movementTweenY];			movementTweenX.addEventListener(TweenEvent.MOTION_FINISH, tweenComplete);			movementTweenX.start();			movementTweenY.start();			tweenInProgress = true;		}				private function tweenComplete(e:TweenEvent){			tweenInProgress = false;		}						public function setColor(_color:Number){			if (Mask != null){				var color:ColorTransform = Mask.transform.colorTransform;				color.color = _color;				Mask.transform.colorTransform = color;			}		}			}}