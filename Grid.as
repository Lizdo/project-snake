package {	import flash.display.MovieClip;	import flash.display.*;	import flash.events.MouseEvent;	import flash.events.Event;	import flash.filters.GlowFilter;		public class Grid extends MovieClip {				public var idX:Number;		public var idY:Number;						public function Grid(){		}				public var enemy;		public var bodyPart;				public function init(idx:int, idy:int){			idX = idx;			idY = idy;		}				public function addBorder(){			var border = new Sprite();			border.graphics.lineStyle(1);			border.graphics.drawRect(0, 0, GridSystem.GRID_SIZE, GridSystem.GRID_SIZE);			border.alpha = 0.5;			gridVisual.addChild(border);		}						public function get State():String		{ 			if (bodyPart != null)				return "Snake";			else if (enemy != null)				return "Enemy";			else				return "None";		}		public function set State(value:String):void		{			return;		}				public var gridVisual:Sprite;				public function update(){			safelyRemove(gridVisual);			if (State != "None" && State != "")				addGridVisual();		}				private function addGridVisual(){			gridVisual = new Sprite();			addChild(gridVisual);			if (bodyPart != null)				addSnakeVisual();			else if (enemy != null)				addEnemyVisual();			if (this == Snake.getInstance().head.grid)				addSnakeHeadVisual();		}						private function addSnakeVisual(){			var visual = new Sprite();			visual.graphics.lineStyle(1);			visual.graphics.beginFill(0xEEEEEE);			visual.graphics.drawRect(0, 0, GridSystem.GRID_SIZE, GridSystem.GRID_SIZE);			visual.alpha = 0.5;			visual.graphics.endFill();			gridVisual.addChild(visual);					}				private var enemySizeRatio = 0.8;				private function addEnemyVisual(){			var visual = new Sprite();			//visual.graphics.lineStyle(1);			var offsetX = GridSystem.GRID_SIZE * (1 - enemySizeRatio);			var offsetY = GridSystem.GRID_SIZE * (1 - enemySizeRatio);									visual.graphics.beginFill(enemy.getColor());			visual.graphics.drawRect(offsetX, offsetY, GridSystem.GRID_SIZE*enemySizeRatio, GridSystem.GRID_SIZE*enemySizeRatio);			visual.alpha = 0.5;			visual.graphics.endFill();			gridVisual.addChild(visual);							}				private function addSnakeHeadVisual(){			var visual = new Sprite();			//visual.graphics.lineStyle(0);			visual.graphics.beginFill(0x666666);			visual.graphics.drawCircle(GridSystem.GRID_SIZE/2, GridSystem.GRID_SIZE/2, GridSystem.GRID_SIZE * 0.2);			visual.graphics.endFill();			gridVisual.addChild(visual);							}				private function safelyRemove(obj, objContainer = "this"){			if (objContainer == "this")				var container = this;			else				container = objContainer;			if (obj!=null)				if (container.contains(obj))					container.removeChild(obj);		}					}}